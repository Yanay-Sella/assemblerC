--------------------------
.define sz = 2
	IC=0
SYMBOL ADDED: sname-sz svalue-2 siden-mdefine SC-1

--------------------------
MAIN: mov r3, LIST[sz]
	IC=0
SYMBOL FOUND!
SymbolName:MAIN | directiveStart:mov r3, LIST[sz]

CODE symbol
SYMBOL ADDED: sname-MAIN svalue-100 siden-code SC-2
opname:mov | op1:r3 | op2:LIST[sz]

additional words: 3
word:00000000111000

--------------------------
LOOP: jmp L1
	IC=4
SYMBOL FOUND!
SymbolName:LOOP | directiveStart:jmp L1

CODE symbol
SYMBOL ADDED: sname-LOOP svalue-104 siden-code SC-3
opname:jmp | op1:(null) | op2:L1

additional words: 1
word:00001001000100

--------------------------
prn #-5
	IC=6
opname:prn | op1:(null) | op2:#-5

additional words: 1
word:00001100000000

--------------------------
mov STR[5], STR[2]
	IC=8
opname:mov | op1:STR[5] | op2:STR[2]

additional words: 4
word:00000000101000

--------------------------
sub r1, r4
	IC=13
opname:sub | op1:r1 | op2:r4

additional words: 1
word:00000011111100

--------------------------
cmp r3, #sz
	IC=15
opname:cmp | op1:r3 | op2:#sz

additional words: 2
word:00000001110000

--------------------------
bne END
	IC=18
opname:bne | op1:(null) | op2:END

additional words: 1
word:00001010000100

--------------------------
L1: inc K
	IC=20
SYMBOL FOUND!
SymbolName:L1 | directiveStart:inc K

CODE symbol
SYMBOL ADDED: sname-L1 svalue-120 siden-code SC-4
opname:inc | op1:(null) | op2:K

additional words: 1
word:00000111000100

--------------------------
bne LOOP
	IC=22
opname:bne | op1:(null) | op2:LOOP

additional words: 1
word:00001010000100

--------------------------
END: hlt
	IC=24
SYMBOL FOUND!
SymbolName:END | directiveStart:hlt

CODE symbol
SYMBOL ADDED: sname-END svalue-124 siden-code SC-5
opname:hlt | op1:(null) | op2:(null)
additional words: 0
word:00001111000000

--------------------------
.define len = 4
	IC=25
SYMBOL ADDED: sname-len svalue-4 siden-mdefine SC-6

--------------------------
STR: .string "abcdef"
	IC=25
SYMBOL FOUND!
SymbolName:STR | directiveStart:.string "abcdef"

SYMBOL ADDED: sname-STR svalue-0 siden-data SC-7
ADDED DATA:97 | DC:1
ADDED DATA:98 | DC:2
ADDED DATA:99 | DC:3
ADDED DATA:100 | DC:4
ADDED DATA:101 | DC:5
ADDED DATA:102 | DC:6
ADDED DATA:0 | DC:7

--------------------------
LIST: .data 6, -9, len
	IC=32
SYMBOL FOUND!
SymbolName:LIST | directiveStart:.data 6, -9, len

SYMBOL ADDED: sname-LIST svalue-7 siden-data SC-8
ADDED DATA:6 | DC:8
ADDED DATA:-9 | DC:9
ADDED DATA:4 | DC:10

--------------------------
K: .data 22
	IC=35
SYMBOL FOUND!
SymbolName:K | directiveStart:.data 22

SYMBOL ADDED: sname-K svalue-10 siden-data SC-9
ADDED DATA:22 | DC:11
dataCount: 11
instructionCount: 36
~~~~~~~ Symbols: ~~~~~~~
Name: sz, Value: 2, Identifier: mdefine
Name: MAIN, Value: 100, Identifier: code
Name: LOOP, Value: 104, Identifier: code
Name: L1, Value: 120, Identifier: code
Name: END, Value: 124, Identifier: code
Name: len, Value: 4, Identifier: mdefine
Name: STR, Value: 125, Identifier: data
Name: LIST, Value: 132, Identifier: data
Name: K, Value: 135, Identifier: data

~~~~~~~ Instruction Table: ~~~~~~~
Instruction 0: 00000000111000
Instruction 1: 
Instruction 2: 
Instruction 3: 
Instruction 4: 00001001000100
Instruction 5: 
Instruction 6: 00001100000000
Instruction 7: 
Instruction 8: 00000000101000
Instruction 9: 
Instruction 10: 
Instruction 11: 
Instruction 12: 
Instruction 13: 00000011111100
Instruction 14: 
Instruction 15: 00000001110000
Instruction 16: 
Instruction 17: 
Instruction 18: 00001010000100
Instruction 19: 
Instruction 20: 00000111000100
Instruction 21: 
Instruction 22: 00001010000100
Instruction 23: 
Instruction 24: 00001111000000
Instruction 25: 00000001100001
Instruction 26: 00000001100010
Instruction 27: 00000001100011
Instruction 28: 00000001100100
Instruction 29: 00000001100101
Instruction 30: 00000001100110
Instruction 31: 00000000000000
Instruction 32: 00000000000110
Instruction 33: 11111111110111
Instruction 34: 00000000000100
Instruction 35: 00000000010110

~~~~~~~ Data Array: ~~~~~~~
Data: 97
Data: 98
Data: 99
Data: 100
Data: 101
Data: 102
Data: 0
Data: 6
Data: -9
Data: 4
Data: 22
~~~~~~~~ SCOND SCAN! ~~~~~~~~

------------------------
.define sz = 2

define line, ignoring

------------------------
MAIN: mov r3, LIST[sz]

op1:r3  op2:LIST[sz]

direct register operand, added word:00000001100000
array index operand, added word 1/2:00001000010010
index:2
array index operand, added word 2/2:00000000001000

------------------------
LOOP: jmp L1

op1:(null)  op2:L1

direct operand, added word:00000111100010

------------------------
prn #-5

independant operation, adding words...
op1:(null)  op2:#-5

immediate operand, added word:11111111101100

------------------------
mov STR[5], STR[2]

independant operation, adding words...
op1:STR[5]  op2:STR[2]

array index operand, added word 1/2:00000111110110
index:5
array index operand, added word 2/2:00000000010100
array index operand, added word 1/2:00000111110110
index:2
array index operand, added word 2/2:00000000001000

------------------------
sub r1, r4

independant operation, adding words...
op1:r1  op2:r4

register operands, added word:00000000110000

------------------------
cmp r3, #sz

independant operation, adding words...
op1:r3  op2:#sz

direct register operand, added word:00000001100000
immediate operand, added word:00000000001000

------------------------
bne END

independant operation, adding words...
op1:(null)  op2:END

direct operand, added word:00000111110010

------------------------
L1: inc K

op1:(null)  op2:K

direct operand, added word:00001000011110

------------------------
bne LOOP

independant operation, adding words...
op1:(null)  op2:LOOP

direct operand, added word:00000110100010

------------------------
END: hlt

op1:(null)  op2:(null)

------------------------
.define len = 4

define line, ignoring

------------------------
STR: .string "abcdef"

string directive, ignoring

------------------------
LIST: .data 6, -9, len

data directive, ignoring

------------------------
K: .data 22

data directive, ignoring
dataCount: 11
instructionCount: 36
~~~~~~~ Symbols: ~~~~~~~
Name: sz, Value: 2, Identifier: mdefine
Name: MAIN, Value: 100, Identifier: code
Name: LOOP, Value: 104, Identifier: code
Name: L1, Value: 120, Identifier: code
Name: END, Value: 124, Identifier: code
Name: len, Value: 4, Identifier: mdefine
Name: STR, Value: 125, Identifier: data
Name: LIST, Value: 132, Identifier: data
Name: K, Value: 135, Identifier: data

~~~~~~~ Instruction Table: ~~~~~~~
Instruction 0: 00000000111000
Instruction 1: 00000001100000
Instruction 2: 00001000010010
Instruction 3: 00000000001000
Instruction 4: 00001001000100
Instruction 5: 00000111100010
Instruction 6: 00001100000000
Instruction 7: 11111111101100
Instruction 8: 00000000101000
Instruction 9: 00000111110110
Instruction 10: 00000000010100
Instruction 11: 00000111110110
Instruction 12: 00000000001000
Instruction 13: 00000011111100
Instruction 14: 00000000110000
Instruction 15: 00000001110000
Instruction 16: 00000001100000
Instruction 17: 00000000001000
Instruction 18: 00001010000100
Instruction 19: 00000111110010
Instruction 20: 00000111000100
Instruction 21: 00001000011110
Instruction 22: 00001010000100
Instruction 23: 00000110100010
Instruction 24: 00001111000000
Instruction 25: 00000001100001
Instruction 26: 00000001100010
Instruction 27: 00000001100011
Instruction 28: 00000001100100
Instruction 29: 00000001100101
Instruction 30: 00000001100110
Instruction 31: 00000000000000
Instruction 32: 00000000000110
Instruction 33: 11111111110111
Instruction 34: 00000000000100
Instruction 35: 00000000010110

~~~~~~~ Data Array: ~~~~~~~
Data: 97
Data: 98
Data: 99
Data: 100
Data: 101
Data: 102
Data: 0
Data: 6
Data: -9
Data: 4
Data: 22